<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Gate_8cpp" kind="file" language="C++">
    <compoundname>Gate.cpp</compoundname>
    <includes refid="Gate_8h" local="yes">Gate.h</includes>
    <includes refid="Debug_8h" local="yes">Debug.h</includes>
    <includes local="no">Arduino.h</includes>
    <incdepgraph>
      <node id="6">
        <label>Debug.h</label>
        <link refid="Debug_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Pin.h</label>
        <link refid="Pin_8h"/>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="7">
        <label>Arduino.h</label>
      </node>
      <node id="4">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Gate.h</label>
        <link refid="Gate_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Gate.cpp</label>
        <link refid="Gate_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="Gate_8cpp_1a24fac9ff5bcc1384e1f99ec350941c9a" prot="public" static="no">
        <name>DEBUG_PRINT</name>
        <param><defname>message</defname></param>
        <initializer><ref refid="classDebug_1aec89c31d051cd6de448ccf9a8f29a83d" kindref="member">Debug::print</ref>(__FILE__, __LINE__, __func__, String(message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Gate.cpp" line="5" column="9" bodyfile="src/Gate.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Gate_8h" kindref="compound">Gate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Debug_8h" kindref="compound">Debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_PRINT(message)<sp/>Debug::print(__FILE__,<sp/>__LINE__,<sp/>__func__,<sp/>String(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="classGate_1a9f0a3e04c61f6924c2d2d5bbdfaa8ead" kindref="member">Gate::Gate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin)<sp/>:<sp/><ref refid="classOutputPin" kindref="compound">OutputPin</ref>(pin)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>division<sp/>=<sp/><ref refid="main_8cpp_1adf636984b70d690edd0c4a32836392e0" kindref="member">internalPPQN</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="classGate_1aa04556acb1cdc5715e38ced8f28c6b27" kindref="member">Gate::~Gate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>code<sp/>here<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>division<sp/>for<sp/>the<sp/>gate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGate_1a49ac696e28beeb2d158778c5588f872e" kindref="member">Gate::setDivision</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDivision)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGate_1a650b1da6da13180bae01219b862ec725" kindref="member">division</ref><sp/>=<sp/>newDivision;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGate_1a6277eacc42d5f84de2a59ea4e062b5bf" kindref="member">Gate::trigger</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(HIGH);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGate_1a16fe5ae275203f6fc24bf34f08033f0f" kindref="member">triggeredTime</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGate_1a420659855b83dd5dcd94b9eda11f5824" kindref="member">Gate::update</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classOutputPin_1a925d7942850c2a7f17f0152a64db5e34" kindref="member">getState</ref>()<sp/>==<sp/>HIGH<sp/>&amp;&amp;<sp/>currentTime<sp/>&gt;=<sp/><ref refid="classGate_1a16fe5ae275203f6fc24bf34f08033f0f" kindref="member">triggeredTime</ref><sp/>+<sp/><ref refid="classGate_1a35f127ccfcc6721cd0fcae3de805815f" kindref="member">gateOnDuration</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(LOW);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classGate_1ab99412ef6a005235669a0acc34bc9c9b" kindref="member">Gate::getDivision</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classGate_1a650b1da6da13180bae01219b862ec725" kindref="member">division</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGate_1a17f0a9f5f2d7e19367c70d6afd965fa1" kindref="member">Gate::setGateOnDuration</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGate_1a35f127ccfcc6721cd0fcae3de805815f" kindref="member">gateOnDuration</ref><sp/>=<sp/>duration;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Gate.cpp"/>
  </compounddef>
</doxygen>
