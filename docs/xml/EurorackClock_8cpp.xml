<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="EurorackClock_8cpp" kind="file" language="C++">
    <compoundname>EurorackClock.cpp</compoundname>
    <includes refid="EurorackClock_8h" local="yes">EurorackClock.h</includes>
    <includes refid="Debug_8h" local="yes">Debug.h</includes>
    <includes local="no">Arduino.h</includes>
    <includes refid="ModeSelector_8h" local="yes">ModeSelector.h</includes>
    <incdepgraph>
      <node id="13">
        <label>ModeSelector.h</label>
        <link refid="ModeSelector_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Gates.h</label>
        <link refid="Gates_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Mode.h</label>
        <link refid="Mode_8h"/>
      </node>
      <node id="14">
        <label>LEDController.h</label>
        <link refid="LEDController_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>HardwareTimer.h</label>
      </node>
      <node id="4">
        <label>LED.h</label>
        <link refid="LED_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Encoder.h</label>
        <link refid="Encoder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Debug.h</label>
        <link refid="Debug_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Pin.h</label>
        <link refid="Pin_8h"/>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="2">
        <label>EurorackClock.h</label>
        <link refid="EurorackClock_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ResetButton.h</label>
        <link refid="ResetButton_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>LEDs.h</label>
        <link refid="LEDs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/EurorackClock.cpp</label>
        <link refid="EurorackClock_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Arduino.h</label>
      </node>
      <node id="9">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Gate.h</label>
        <link refid="Gate_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="EurorackClock_8cpp_1a24fac9ff5bcc1384e1f99ec350941c9a" prot="public" static="no">
        <name>DEBUG_PRINT</name>
        <param><defname>message</defname></param>
        <initializer><ref refid="classDebug_1aec89c31d051cd6de448ccf9a8f29a83d" kindref="member">Debug::print</ref>(__FILE__, __LINE__, __func__, String(message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/EurorackClock.cpp" line="6" column="9" bodyfile="src/EurorackClock.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EurorackClock_8h" kindref="compound">EurorackClock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Debug_8h" kindref="compound">Debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ModeSelector_8h" kindref="compound">ModeSelector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_PRINT(message)<sp/>Debug::print(__FILE__,<sp/>__LINE__,<sp/>__func__,<sp/>String(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>int<sp/>LED_ON_DURATION<sp/>=<sp/>10;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>int<sp/>LONG_LED_ON_DURATION<sp/>=<sp/>25;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>int<sp/>MIDI_CLOCK_PULSE_COUNT<sp/>=<sp/>24;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>variables<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a9f9bb4fdbf42fea86ba74511dde5285f" kindref="member">EurorackClock::lastFlashTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">EurorackClock::flashPulseCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="classEurorackClock" kindref="compound">EurorackClock</ref>*<sp/><ref refid="classEurorackClock_1a10369405a7858db967411284861e3439" kindref="member">EurorackClock::instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classEurorackClock_1ab4640da7e0f07985916b5ed44a6afbd2" kindref="member">EurorackClock::EurorackClock</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clockPin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resetPin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempoLedPin,<sp/><ref refid="classGates" kindref="compound">Gates</ref>&amp;<sp/><ref refid="main_8cpp_1aafa551f375cee7e3faaf9390080592a7" kindref="member">gates</ref>,<sp/><ref refid="classLEDs" kindref="compound">LEDs</ref>&amp;<sp/><ref refid="main_8cpp_1acff5fe5d7a28e483a9ab2f183bb4dc25" kindref="member">leds</ref>)<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>clockPin(clockPin),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetPin(resetPin),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempo(120),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTickTime(0),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tickInterval(60000<sp/>/<sp/>tempo),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isRunning(false),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempoLed(tempoLedPin),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>externalClock(clockPin,<sp/>false,<sp/>true),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a191753692ee909460b91f43cfd141fa7" kindref="member">resetButton</ref>(resetPin,<sp/>false,<sp/>true),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aafa551f375cee7e3faaf9390080592a7" kindref="member">gates</ref>(<ref refid="main_8cpp_1aafa551f375cee7e3faaf9390080592a7" kindref="member">gates</ref>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1acff5fe5d7a28e483a9ab2f183bb4dc25" kindref="member">leds</ref>(<ref refid="main_8cpp_1acff5fe5d7a28e483a9ab2f183bb4dc25" kindref="member">leds</ref>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HardwareTimer(TIM2);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Timer<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachInterrupt(digitalPinToInterrupt(resetPin),<sp/><ref refid="classEurorackClock_1ac6279fbb8d7396de017252b39b3f266b" kindref="member">EurorackClock::resetInterruptHandler</ref>,<sp/>RISING);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;externalTempo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialization<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1af237ef8da045ffc906547346b8e1e20d" kindref="member">EurorackClock::setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1a26ba6201d8c71d85eec4696558eea0f4" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa33304d81b503a6183633369016188a6" kindref="member">externalClock</ref>.<ref refid="classInputPin_1a32cd882e2f65df5d59f832b5e0cf7169" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1ae2d7164536f7921ac0751875fd67c83b" kindref="member">resetButton</ref>.<ref refid="classInputPin_1a32cd882e2f65df5d59f832b5e0cf7169" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>tempo<sp/>of<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a3abcd345bde222e68cd86464ae1de2ae" kindref="member">EurorackClock::setTempo</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newTempo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppqn)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1ae31434bf73c7c86490a70d5fa6dbe3fc" kindref="member">tempo</ref><sp/>=<sp/>newTempo;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ppqn<sp/>=<sp/><ref refid="classEurorackClock_1ac829929df9b7372bcd3b2c609ecbf9a1" kindref="member">ppqn</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a82ae8c87efe27db5487b3241f205f652" kindref="member">tickInterval</ref><sp/>=<sp/>60000000.0<sp/>/<sp/>(<ref refid="classEurorackClock_1ae31434bf73c7c86490a70d5fa6dbe3fc" kindref="member">tempo</ref><sp/>*<sp/><ref refid="classEurorackClock_1ac829929df9b7372bcd3b2c609ecbf9a1" kindref="member">ppqn</ref>);<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>interval<sp/>in<sp/>microseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a4a47006cfd467d0385bc605ea9157618" kindref="member">timer</ref>-&gt;setOverflow(<ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a82ae8c87efe27db5487b3241f205f652" kindref="member">tickInterval</ref>,<sp/>MICROSEC_FORMAT);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a85a00dfdd0cd08c0b3a9d90acc5cc66b" kindref="member">EurorackClock::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1ad2352e0588e3fc275e0cf3afa943c293" kindref="member">isRunning</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a4a47006cfd467d0385bc605ea9157618" kindref="member">timer</ref>-&gt;attachInterrupt(<ref refid="classEurorackClock_1aec074cdc6187413e42bb4e1cce6c07c8" kindref="member">interruptHandler</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a4a47006cfd467d0385bc605ea9157618" kindref="member">timer</ref>-&gt;resume();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stop<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1ad92731fd0b8203b283be37fd83ab9e7b" kindref="member">EurorackClock::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1ad2352e0588e3fc275e0cf3afa943c293" kindref="member">isRunning</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a4a47006cfd467d0385bc605ea9157618" kindref="member">timer</ref>-&gt;detachInterrupt();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a4a47006cfd467d0385bc605ea9157618" kindref="member">timer</ref>-&gt;pause();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a3ee132275b852260555b9cd5cf9536c1" kindref="member">EurorackClock::getTempo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1ae31434bf73c7c86490a70d5fa6dbe3fc" kindref="member">tempo</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Toggle<sp/>the<sp/>time<sp/>the<sp/>led<sp/>stays<sp/>on<sp/>for<sp/>tempo<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a45c55e3e1a02a319cf83c60658bff956" kindref="member">EurorackClock::toggleLedOnDuration</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectingTempo)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a49c3ef3023e15397d463026b93229634" kindref="member">ledOnDuration</ref><sp/>=<sp/>!selectingTempo<sp/>?<sp/><ref refid="classEurorackClock_1aa6f21a81192926804c417f3937608af0" kindref="member">LONG_LED_ON_DURATION</ref><sp/>:<sp/><ref refid="classEurorackClock_1aa19d61388803b784928c4ab209f18cab" kindref="member">LED_ON_DURATION</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>tempo<sp/>LED<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a9cddc56f91761c38a32f850fe4920804" kindref="member">EurorackClock::updateTempoLed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>update<sp/>the<sp/>LED<sp/>if<sp/>we&apos;re<sp/>in<sp/>Mode0<sp/>and<sp/>not<sp/>in<sp/>mode<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().getMode()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!<ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().isInModeSelection())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>LED<sp/>is<sp/>on<sp/>and<sp/>it&apos;s<sp/>been<sp/>on<sp/>for<sp/>the<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1a925d7942850c2a7f17f0152a64db5e34" kindref="member">getState</ref>()<sp/>==<sp/>HIGH<sp/>&amp;&amp;<sp/>currentTime<sp/>-<sp/><ref refid="classEurorackClock_1a8f2268e67c1164e5acb449e2ff162892" kindref="member">ledOnTime</ref><sp/>&gt;=<sp/><ref refid="classEurorackClock_1a49c3ef3023e15397d463026b93229634" kindref="member">ledOnDuration</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>LED<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(LOW);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>in<sp/>Mode0,<sp/>turn<sp/>the<sp/>LED<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(LOW);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>flash<sp/>pulse<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1ae0c42a84a524c12c2f01e43682e5e36f" kindref="member">EurorackClock::updateFlashPulseCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEurorackClock_1a1534c3851f19a278a70f7d6bad47b98d" kindref="member">resetTriggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref>++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a50a5339b6a232a0e2db5bf7c621bbf9e" kindref="member">handleResetTrigger</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a55a6e89f8c69c7ee73392c89f8e155a8" kindref="member">decideFlash</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>reset<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a50a5339b6a232a0e2db5bf7c621bbf9e" kindref="member">EurorackClock::handleResetTrigger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1a1534c3851f19a278a70f7d6bad47b98d" kindref="member">resetTriggered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(LOW);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a1534c3851f19a278a70f7d6bad47b98d" kindref="member">resetTriggered</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa44f194d606bc5dd0caf3508bacc6857" kindref="member">timeToFlash</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Decide<sp/>whether<sp/>it&apos;s<sp/>time<sp/>to<sp/>flash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a55a6e89f8c69c7ee73392c89f8e155a8" kindref="member">EurorackClock::decideFlash</ref>()<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updateCount<sp/>=<sp/><ref refid="classEurorackClock_1a707c76310f278ac9675d493d356623c1" kindref="member">isMidiClock</ref><sp/>?<sp/>24<sp/>:<sp/>this-&gt;<ref refid="classEurorackClock_1ac829929df9b7372bcd3b2c609ecbf9a1" kindref="member">ppqn</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref><sp/>&gt;=<sp/>updateCount)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa44f194d606bc5dd0caf3508bacc6857" kindref="member">timeToFlash</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>external<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1ab526a6829f0489eae35811e86e7e80f8" kindref="member">EurorackClock::handleExternalClock</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().getMode()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref><sp/>=<sp/><ref refid="classEurorackClock_1aa33304d81b503a6183633369016188a6" kindref="member">externalClock</ref>.<ref refid="classInputPin_1abcb57baddc2f83f5c969959bbec21047" kindref="member">getState</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref><sp/>==<sp/>HIGH<sp/>&amp;&amp;<sp/><ref refid="classEurorackClock_1aa1f32b9296ee482b8cc4a5a5b0246ad4" kindref="member">lastClockState</ref><sp/>==<sp/>LOW<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="classEurorackClock_1a53f9514598facb1b47a35e2d0cfc5bf6" kindref="member">isExternalTempo</ref><sp/>&amp;&amp;<sp/>(currentTime<sp/>-<sp/><ref refid="classEurorackClock_1a530f570bb7e4615cf304f473ac820133" kindref="member">lastMidiClockTime</ref><sp/>&gt;<sp/><ref refid="classEurorackClock_1ae5b52e0dacc5a2e9a1f53f380f245cb1" kindref="member">MIDI_CLOCK_TIMEOUT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a707c76310f278ac9675d493d356623c1" kindref="member">isMidiClock</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a300b4ab6a0b925f185841a7bca2d80cc" kindref="member">triggerClockPulse</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa1f32b9296ee482b8cc4a5a5b0246ad4" kindref="member">lastClockState</ref><sp/>=<sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>MIDI<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1aa204c15662e069ecbf1ac4029116365d" kindref="member">EurorackClock::handleMidiClock</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().getMode()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classEurorackClock_1a53f9514598facb1b47a35e2d0cfc5bf6" kindref="member">isExternalTempo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>MIDI<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a530f570bb7e4615cf304f473ac820133" kindref="member">lastMidiClockTime</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a707c76310f278ac9675d493d356623c1" kindref="member">isMidiClock</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>clock<sp/>pulse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a300b4ab6a0b925f185841a7bca2d80cc" kindref="member">triggerClockPulse</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>PPQN<sp/>(Pulses<sp/>Per<sp/>Quarter<sp/>Note)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a6f6b794fde098d908287afb357d30cb6" kindref="member">EurorackClock::setPPQN</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ppqn)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ppqn<sp/>=<sp/><ref refid="classEurorackClock_1ac829929df9b7372bcd3b2c609ecbf9a1" kindref="member">ppqn</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>whether<sp/>the<sp/>clock<sp/>is<sp/>using<sp/>external<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1aa911fac3efe50a37cf2355046119461b" kindref="member">EurorackClock::setExternalTempo</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExternalTempo)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;isExternalTempo<sp/>=<sp/><ref refid="classEurorackClock_1a53f9514598facb1b47a35e2d0cfc5bf6" kindref="member">isExternalTempo</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEurorackClock_1a53f9514598facb1b47a35e2d0cfc5bf6" kindref="member">isExternalTempo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a707c76310f278ac9675d493d356623c1" kindref="member">isMidiClock</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>reset<sp/>necessary<sp/>state<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa1f32b9296ee482b8cc4a5a5b0246ad4" kindref="member">lastClockState</ref><sp/>=<sp/>LOW;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1abdd7383cccac419acc8fb29ef21c11d0" kindref="member">lastClockTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a52d17e9dbf5701acca86bee03a16b730" kindref="member">tickCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>tick<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a7881b7e717da092e55e7f8b0961b6ae0" kindref="member">EurorackClock::tick</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a4397cba12ab477b8759ccf846b5a909d" kindref="member">update</ref>(currentTime);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a808f0d1dc014fd9f8541433bc26ed921" kindref="member">leds</ref>.<ref refid="classLEDs_1ab689142c4f9a1f6a8d1deb6e5f3e79e6" kindref="member">update</ref>(currentTime);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1a4af4876927901a6cfc1619d2192fbb55" kindref="member">shouldTriggerClockPulse</ref>())<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a300b4ab6a0b925f185841a7bca2d80cc" kindref="member">triggerClockPulse</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a9cddc56f91761c38a32f850fe4920804" kindref="member">updateTempoLed</ref>(currentTime);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it&apos;s<sp/>time<sp/>to<sp/>trigger<sp/>a<sp/>clock<sp/>pulse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a4af4876927901a6cfc1619d2192fbb55" kindref="member">EurorackClock::shouldTriggerClockPulse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldTrigger<sp/>=<sp/>!this-&gt;isExternalTempo<sp/>&amp;&amp;<sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1ad2352e0588e3fc275e0cf3afa943c293" kindref="member">isRunning</ref><sp/>&amp;&amp;<sp/>micros()<sp/>-<sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a95ea496cd652c244f1b016ae0d4e0299" kindref="member">lastTickTime</ref><sp/>&gt;=<sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a82ae8c87efe27db5487b3241f205f652" kindref="member">tickInterval</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldTrigger<sp/>=<sp/>shouldTrigger<sp/>&amp;&amp;<sp/><ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shouldTrigger;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>tempo<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1ad3159d70a7ed39e332b6564c2b0e227f" kindref="member">EurorackClock::triggerTempoLed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>LED<sp/>is<sp/>off<sp/>and<sp/>enough<sp/>time<sp/>has<sp/>passed<sp/>since<sp/>the<sp/>last<sp/>flash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1a925d7942850c2a7f17f0152a64db5e34" kindref="member">getState</ref>()<sp/>==<sp/>LOW)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>the<sp/>LED<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classEurorackClock_1a08c566025baec51dfe9528636895dca1" kindref="member">tempoLed</ref>.<ref refid="classOutputPin_1aad0ad1b49fdbab03f702c7fe62dc7903" kindref="member">setState</ref>(HIGH);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>time<sp/>the<sp/>LED<sp/>was<sp/>turned<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a8f2268e67c1164e5acb449e2ff162892" kindref="member">ledOnTime</ref><sp/>=<sp/>currentTime;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa44f194d606bc5dd0caf3508bacc6857" kindref="member">timeToFlash</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trigger<sp/>a<sp/>clock<sp/>pulse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a300b4ab6a0b925f185841a7bca2d80cc" kindref="member">EurorackClock::triggerClockPulse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a95ea496cd652c244f1b016ae0d4e0299" kindref="member">lastTickTime</ref><sp/>=<sp/>micros();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1ae0c42a84a524c12c2f01e43682e5e36f" kindref="member">updateFlashPulseCount</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a708240997f4112f2bcb7f9e25ab186eb" kindref="member">triggerGates</ref>(currentTime);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a02c9cd57faf38ecdfec76e6d09d93b7c" kindref="member">handleTempoLed</ref>(currentTime);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>gates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a708240997f4112f2bcb7f9e25ab186eb" kindref="member">EurorackClock::triggerGates</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>mode<sp/>selection<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>().isInModeSelection())<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>mode<sp/>selection<sp/>is<sp/>active,<sp/>return<sp/>immediately<sp/>without<sp/>triggering<sp/>the<sp/>gates<sp/>and<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a8aa11d0f9ea6f809549664f8fd4f7cc2" kindref="member">numGates</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a283f2d50700fad8bdca29e6227e65045" kindref="member">gateCounters</ref>[i]++;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>division<sp/>=<sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a06f6153e686887048497f965599e6ba4" kindref="member">getDivision</ref>(i);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a283f2d50700fad8bdca29e6227e65045" kindref="member">gateCounters</ref>[i]<sp/>%<sp/>division<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a283f2d50700fad8bdca29e6227e65045" kindref="member">gateCounters</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a6ef8dcff0ca40853f6ec07d20afa1b9b" kindref="member">trigger</ref>(i,<sp/>currentTime);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a18d0602275e88db59021394b4a377151" kindref="member">getSelectedGate</ref>())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>LED<sp/>inverted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a808f0d1dc014fd9f8541433bc26ed921" kindref="member">leds</ref>.<ref refid="classLEDs_1af9c6980e1497fca93a2945698156fbe6" kindref="member">trigger</ref>(i,<sp/>currentTime,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>LED<sp/>normally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a808f0d1dc014fd9f8541433bc26ed921" kindref="member">leds</ref>.<ref refid="classLEDs_1af9c6980e1497fca93a2945698156fbe6" kindref="member">trigger</ref>(i,<sp/>currentTime);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>tempo<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1a02c9cd57faf38ecdfec76e6d09d93b7c" kindref="member">EurorackClock::handleTempoLed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pulseCount<sp/>=<sp/><ref refid="classEurorackClock_1a707c76310f278ac9675d493d356623c1" kindref="member">isMidiClock</ref><sp/>?<sp/><ref refid="classEurorackClock_1af1d98ae106104e4a771e42fda5b88d0c" kindref="member">MIDI_CLOCK_PULSE_COUNT</ref><sp/>:<sp/><ref refid="classEurorackClock_1ac829929df9b7372bcd3b2c609ecbf9a1" kindref="member">ppqn</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref><sp/>%<sp/>pulseCount<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1ad3159d70a7ed39e332b6564c2b0e227f" kindref="member">triggerTempoLed</ref>(currentTime);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1aa44f194d606bc5dd0caf3508bacc6857" kindref="member">timeToFlash</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1acb69cc2c53c500576df9c12c025db2d1" kindref="member">EurorackClock::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(isExternalTempo)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a1534c3851f19a278a70f7d6bad47b98d" kindref="member">resetTriggered</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a50a5339b6a232a0e2db5bf7c621bbf9e" kindref="member">handleResetTrigger</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>the<sp/>events<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a8aa11d0f9ea6f809549664f8fd4f7cc2" kindref="member">numGates</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a6ef8dcff0ca40853f6ec07d20afa1b9b" kindref="member">trigger</ref>(i,<sp/>currentTime);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a283f2d50700fad8bdca29e6227e65045" kindref="member">gateCounters</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1ad3159d70a7ed39e332b6564c2b0e227f" kindref="member">triggerTempoLed</ref>(currentTime);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a6582607e7c111bb17bd4656bade25880" kindref="member">clockState</ref>.<ref refid="structClockState_1a95ea496cd652c244f1b016ae0d4e0299" kindref="member">lastTickTime</ref><sp/>=<sp/>micros();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1a3c863251f650f36cf05de825a300a7fb" kindref="member">flashPulseCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a4397cba12ab477b8759ccf846b5a909d" kindref="member">update</ref>(currentTime);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}<sp/>else<sp/>if<sp/>(!isExternalTempo<sp/>&amp;&amp;<sp/>ModeSelector::getInstance().getMode()<sp/>==<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>unsigned<sp/>long<sp/>currentTime<sp/>=<sp/>millis();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>currently<sp/>selected<sp/>gate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>selectedGate<sp/>=<sp/>gates.getSelectedGate();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Reset<sp/>the<sp/>counter<sp/>for<sp/>the<sp/>selected<sp/>gate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>gates.gateCounters[selectedGate]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>gates.trigger(selectedGate,<sp/>currentTime);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEurorackClock_1acb69cc2c53c500576df9c12c025db2d1" kindref="member">EurorackClock::reset</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedGate)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a6ef8dcff0ca40853f6ec07d20afa1b9b" kindref="member">trigger</ref>(selectedGate,<sp/>currentTime);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEurorackClock_1af7e11cb46ab51c58609123ae13c236eb" kindref="member">gates</ref>.<ref refid="classGates_1a283f2d50700fad8bdca29e6227e65045" kindref="member">gateCounters</ref>[selectedGate]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/EurorackClock.cpp"/>
  </compounddef>
</doxygen>
