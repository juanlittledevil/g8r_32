<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classModeSelector" kind="class" language="C++" prot="public">
    <compoundname>ModeSelector</compoundname>
    <includes refid="ModeSelector_8h" local="no">ModeSelector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classMode" kindref="compound">Mode</ref> * &gt;</type>
        <definition>std::vector&lt;Mode*&gt; ModeSelector::modes</definition>
        <argsstring></argsstring>
        <name>modes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="34" column="17" bodyfile="include/ModeSelector.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a28fad2b854f3a9d724c3661d87a94c0e" prot="private" static="no" mutable="no">
        <type><ref refid="classMode" kindref="compound">Mode</ref> *</type>
        <definition>Mode* ModeSelector::nullMode</definition>
        <argsstring></argsstring>
        <name>nullMode</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="35" column="10" bodyfile="include/ModeSelector.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1adb7ab19bba250819ca90a26c8281bf71" prot="private" static="no" mutable="no">
        <type><ref refid="classMode" kindref="compound">Mode</ref> *&amp;</type>
        <definition>Mode*&amp; ModeSelector::currentMode</definition>
        <argsstring></argsstring>
        <name>currentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="36" column="10" bodyfile="include/ModeSelector.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1aaab9cca1953b1f4797a55ded09638c95" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ModeSelector::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="37" column="9" bodyfile="include/ModeSelector.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ModeSelector::inModeSelection</definition>
        <argsstring></argsstring>
        <name>inModeSelection</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="38" column="9" bodyfile="include/ModeSelector.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" prot="private" static="no" mutable="no">
        <type><ref refid="classLEDController" kindref="compound">LEDController</ref> *</type>
        <definition>LEDController* ModeSelector::ledController</definition>
        <argsstring></argsstring>
        <name>ledController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="39" column="19" bodyfile="include/ModeSelector.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" prot="private" static="no" mutable="no">
        <type><ref refid="classEncoder" kindref="compound">Encoder</ref> *</type>
        <definition>Encoder* ModeSelector::encoder</definition>
        <argsstring></argsstring>
        <name>encoder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="40" column="13" bodyfile="include/ModeSelector.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a6b43ab161008add913652ccea49951e1" prot="private" static="no" mutable="no">
        <type><ref refid="classResetButton" kindref="compound">ResetButton</ref> *</type>
        <definition>ResetButton* ModeSelector::resetButton</definition>
        <argsstring></argsstring>
        <name>resetButton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="41" column="17" bodyfile="include/ModeSelector.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a4dc6fb472a2757e88dde6f35137c08e4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ModeSelector::isInSelection</definition>
        <argsstring></argsstring>
        <name>isInSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="42" column="10" bodyfile="include/ModeSelector.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1af98d3659251c8bed66b9335cc5c7f9c9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ModeSelector::inChannelSelection</definition>
        <argsstring></argsstring>
        <name>inChannelSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="43" column="10" bodyfile="include/ModeSelector.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1aa101ddd545060ae8f98e58f986f86637" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ModeSelector::singlePressHandled</definition>
        <argsstring></argsstring>
        <name>singlePressHandled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="44" column="10" bodyfile="include/ModeSelector.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1ae886bbd080f44f047682429748c28045" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ModeSelector::doublePressHandled</definition>
        <argsstring></argsstring>
        <name>doublePressHandled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="45" column="10" bodyfile="include/ModeSelector.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1ade89353075816ece4e257ded8e888d88" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ModeSelector::longPressHandled</definition>
        <argsstring></argsstring>
        <name>longPressHandled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="46" column="10" bodyfile="include/ModeSelector.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1aa34005332133e2b5e10a4b904aa3c23e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ModeSelector::totalModes</definition>
        <argsstring></argsstring>
        <name>totalModes</name>
        <initializer>= modes.size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="47" column="12" bodyfile="include/ModeSelector.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a69c5b741591b66abbf46e64aa295a8f8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ModeSelector::previousMode</definition>
        <argsstring></argsstring>
        <name>previousMode</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="48" column="9" bodyfile="include/ModeSelector.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModeSelector_1a9657b40d4e60d82c6e4ac5a2a605c47e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ModeSelector::numLeds</definition>
        <argsstring></argsstring>
        <name>numLeds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="49" column="9" bodyfile="include/ModeSelector.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classModeSelector" kindref="compound">ModeSelector</ref> &amp;</type>
        <definition>ModeSelector &amp; ModeSelector::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="14" column="25" bodyfile="src/ModeSelector.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ModeSelector::getMode</definition>
        <argsstring>() const</argsstring>
        <name>getMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="15" column="9" bodyfile="src/ModeSelector.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a3951bcc3ea04b712d94850920b7b6031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::setMode</definition>
        <argsstring>(int newMode)</argsstring>
        <name>setMode</name>
        <param>
          <type>int</type>
          <declname>newMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="16" column="10" bodyfile="src/ModeSelector.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1ac85d39879a6059172ca90e57341e3371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::handleLongPress</definition>
        <argsstring>()</argsstring>
        <name>handleLongPress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="17" column="10" bodyfile="src/ModeSelector.cpp" bodystart="28" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1aad5e1a078338a35232888ec31d6cc5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::handleEncoderRotation</definition>
        <argsstring>()</argsstring>
        <name>handleEncoderRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="18" column="10" bodyfile="src/ModeSelector.cpp" bodystart="77" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a50329d06bde51f77027d6ce9e2444bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::handleModeSelectionPress</definition>
        <argsstring>()</argsstring>
        <name>handleModeSelectionPress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="19" column="10" bodyfile="src/ModeSelector.cpp" bodystart="46" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a56ce569a1e97e2a0b382d032fabf8dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::handleButtonPress</definition>
        <argsstring>()</argsstring>
        <name>handleButtonPress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="20" column="10" bodyfile="src/ModeSelector.cpp" bodystart="59" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1addf7f39b68e55c83b693da4911bd5fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::setLedController</definition>
        <argsstring>(LEDController &amp;ledController)</argsstring>
        <name>setLedController</name>
        <param>
          <type><ref refid="classLEDController" kindref="compound">LEDController</ref> &amp;</type>
          <declname>ledController</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="21" column="10" bodyfile="src/ModeSelector.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a5b291f549e155bc4f47c35746d966221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::setEncoder</definition>
        <argsstring>(Encoder &amp;encoder)</argsstring>
        <name>setEncoder</name>
        <param>
          <type><ref refid="classEncoder" kindref="compound">Encoder</ref> &amp;</type>
          <declname>encoder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="22" column="10" bodyfile="src/ModeSelector.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a0232058d131a73a98781552b12a3b696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::setCurrentMode</definition>
        <argsstring>(Mode *&amp;currentMode)</argsstring>
        <name>setCurrentMode</name>
        <param>
          <type><ref refid="classMode" kindref="compound">Mode</ref> *&amp;</type>
          <declname>currentMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="23" column="10" bodyfile="src/ModeSelector.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a6da6a3354fe3d5afd3f241324359de03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ModeSelector::isInModeSelection</definition>
        <argsstring>()</argsstring>
        <name>isInModeSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="24" column="10" bodyfile="src/ModeSelector.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a5a599c64ffef54ba1dade4fedff23d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMode" kindref="compound">Mode</ref> *</type>
        <definition>Mode * ModeSelector::getCurrentMode</definition>
        <argsstring>()</argsstring>
        <name>getCurrentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="25" column="10" bodyfile="src/ModeSelector.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1ab3680d5757a1efade5128dad7c7c0ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::addMode</definition>
        <argsstring>(Mode *mode)</argsstring>
        <name>addMode</name>
        <param>
          <type><ref refid="classMode" kindref="compound">Mode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="26" column="10" bodyfile="src/ModeSelector.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1ac94481813de71f0680ab6c005c0b8e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="27" column="10" bodyfile="src/ModeSelector.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classModeSelector_1af0db492b33c751ccaafa23d9b3880fbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ModeSelector::ModeSelector</definition>
        <argsstring>()</argsstring>
        <name>ModeSelector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="30" column="5" bodyfile="src/ModeSelector.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a5c89c05801d37b7763369afe0940c7e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ModeSelector::ModeSelector</definition>
        <argsstring>(ModeSelector const &amp;)</argsstring>
        <name>ModeSelector</name>
        <param>
          <type><ref refid="classModeSelector" kindref="compound">ModeSelector</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classModeSelector_1a7e4c75c64115ff1628b1338df8d36639" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ModeSelector::operator=</definition>
        <argsstring>(ModeSelector const &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classModeSelector" kindref="compound">ModeSelector</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ModeSelector.h" line="32" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>OutputPin</label>
        <link refid="classOutputPin"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Pin</label>
        <link refid="classPin"/>
      </node>
      <node id="2">
        <label>Encoder</label>
        <link refid="classEncoder"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-encButton</edgelabel>
          <edgelabel>-encCLK</edgelabel>
          <edgelabel>-encDT</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>LEDs</label>
        <link refid="classLEDs"/>
        <childnode refid="9" relation="usage">
          <edgelabel>-leds</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>InputPin</label>
        <link refid="classInputPin"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Mode</label>
        <link refid="classMode"/>
      </node>
      <node id="9">
        <label>LED</label>
        <link refid="classLED"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>ResetButton</label>
        <link refid="classResetButton"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-resetButton</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>ModeSelector</label>
        <link refid="classModeSelector"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-encoder</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-currentMode</edgelabel>
          <edgelabel>-nullMode</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-resetButton</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-ledController</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>LEDController</label>
        <link refid="classLEDController"/>
        <childnode refid="8" relation="usage">
          <edgelabel>-leds</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/ModeSelector.h" line="12" column="1" bodyfile="include/ModeSelector.h" bodystart="12" bodyend="50"/>
    <listofallmembers>
      <member refid="classModeSelector_1ab3680d5757a1efade5128dad7c7c0ab6" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>addMode</name></member>
      <member refid="classModeSelector_1adb7ab19bba250819ca90a26c8281bf71" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>currentMode</name></member>
      <member refid="classModeSelector_1ae886bbd080f44f047682429748c28045" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>doublePressHandled</name></member>
      <member refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>encoder</name></member>
      <member refid="classModeSelector_1a5a599c64ffef54ba1dade4fedff23d7a" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>getCurrentMode</name></member>
      <member refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>getInstance</name></member>
      <member refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>getMode</name></member>
      <member refid="classModeSelector_1a56ce569a1e97e2a0b382d032fabf8dda" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>handleButtonPress</name></member>
      <member refid="classModeSelector_1aad5e1a078338a35232888ec31d6cc5ee" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>handleEncoderRotation</name></member>
      <member refid="classModeSelector_1ac85d39879a6059172ca90e57341e3371" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>handleLongPress</name></member>
      <member refid="classModeSelector_1a50329d06bde51f77027d6ce9e2444bc1" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>handleModeSelectionPress</name></member>
      <member refid="classModeSelector_1af98d3659251c8bed66b9335cc5c7f9c9" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>inChannelSelection</name></member>
      <member refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>inModeSelection</name></member>
      <member refid="classModeSelector_1a6da6a3354fe3d5afd3f241324359de03" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>isInModeSelection</name></member>
      <member refid="classModeSelector_1a4dc6fb472a2757e88dde6f35137c08e4" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>isInSelection</name></member>
      <member refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>ledController</name></member>
      <member refid="classModeSelector_1ade89353075816ece4e257ded8e888d88" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>longPressHandled</name></member>
      <member refid="classModeSelector_1aaab9cca1953b1f4797a55ded09638c95" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>mode</name></member>
      <member refid="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>modes</name></member>
      <member refid="classModeSelector_1af0db492b33c751ccaafa23d9b3880fbc" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>ModeSelector</name></member>
      <member refid="classModeSelector_1a5c89c05801d37b7763369afe0940c7e9" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>ModeSelector</name></member>
      <member refid="classModeSelector_1a28fad2b854f3a9d724c3661d87a94c0e" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>nullMode</name></member>
      <member refid="classModeSelector_1a9657b40d4e60d82c6e4ac5a2a605c47e" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>numLeds</name></member>
      <member refid="classModeSelector_1a7e4c75c64115ff1628b1338df8d36639" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>operator=</name></member>
      <member refid="classModeSelector_1a69c5b741591b66abbf46e64aa295a8f8" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>previousMode</name></member>
      <member refid="classModeSelector_1a6b43ab161008add913652ccea49951e1" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>resetButton</name></member>
      <member refid="classModeSelector_1a0232058d131a73a98781552b12a3b696" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>setCurrentMode</name></member>
      <member refid="classModeSelector_1a5b291f549e155bc4f47c35746d966221" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>setEncoder</name></member>
      <member refid="classModeSelector_1addf7f39b68e55c83b693da4911bd5fa6" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>setLedController</name></member>
      <member refid="classModeSelector_1a3951bcc3ea04b712d94850920b7b6031" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>setMode</name></member>
      <member refid="classModeSelector_1aa101ddd545060ae8f98e58f986f86637" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>singlePressHandled</name></member>
      <member refid="classModeSelector_1aa34005332133e2b5e10a4b904aa3c23e" prot="private" virt="non-virtual"><scope>ModeSelector</scope><name>totalModes</name></member>
      <member refid="classModeSelector_1ac94481813de71f0680ab6c005c0b8e12" prot="public" virt="non-virtual"><scope>ModeSelector</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
