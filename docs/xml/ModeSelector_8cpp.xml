<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ModeSelector_8cpp" kind="file" language="C++">
    <compoundname>ModeSelector.cpp</compoundname>
    <includes refid="ModeSelector_8h" local="yes">ModeSelector.h</includes>
    <includes local="no">Arduino.h</includes>
    <includes refid="Debug_8h" local="yes">Debug.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/ModeSelector.cpp</label>
        <link refid="ModeSelector_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ModeSelector.h</label>
        <link refid="ModeSelector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Mode.h</label>
        <link refid="Mode_8h"/>
      </node>
      <node id="4">
        <label>LEDController.h</label>
        <link refid="LEDController_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>LED.h</label>
        <link refid="LED_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Encoder.h</label>
        <link refid="Encoder_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Debug.h</label>
        <link refid="Debug_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Pin.h</label>
        <link refid="Pin_8h"/>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="10">
        <label>ResetButton.h</label>
        <link refid="ResetButton_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>LEDs.h</label>
        <link refid="LEDs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Arduino.h</label>
      </node>
      <node id="13">
        <label>Constants.h</label>
        <link refid="Constants_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ModeSelector_8cpp_1a24fac9ff5bcc1384e1f99ec350941c9a" prot="public" static="no">
        <name>DEBUG_PRINT</name>
        <param><defname>message</defname></param>
        <initializer><ref refid="classDebug_1aec89c31d051cd6de448ccf9a8f29a83d" kindref="member">Debug::print</ref>(__FILE__, __LINE__, __func__, String(message))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModeSelector.cpp" line="5" column="9" bodyfile="src/ModeSelector.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ModeSelector_8h" kindref="compound">ModeSelector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Debug_8h" kindref="compound">Debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_PRINT(message)<sp/>Debug::print(__FILE__,<sp/>__LINE__,<sp/>__func__,<sp/>String(message))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="classModeSelector" kindref="compound">ModeSelector</ref>&amp;<sp/><ref refid="classModeSelector_1a2312f6a56156ab4557baebe6f2d050ea" kindref="member">ModeSelector::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classModeSelector" kindref="compound">ModeSelector</ref><sp/>instance;<sp/></highlight><highlight class="comment">//<sp/>Guaranteed<sp/>to<sp/>be<sp/>destroyed,<sp/>instantiated<sp/>on<sp/>first<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1ac94481813de71f0680ab6c005c0b8e12" kindref="member">ModeSelector::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a56ce569a1e97e2a0b382d032fabf8dda" kindref="member">handleButtonPress</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1aad5e1a078338a35232888ec31d6cc5ee" kindref="member">handleEncoderRotation</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">ModeSelector::getMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1aaab9cca1953b1f4797a55ded09638c95" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a3951bcc3ea04b712d94850920b7b6031" kindref="member">ModeSelector::setMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newMode)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newMode<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>newMode<sp/>&lt;<sp/><ref refid="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" kindref="member">modes</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1aaab9cca1953b1f4797a55ded09638c95" kindref="member">mode</ref><sp/>=<sp/>newMode;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1adb7ab19bba250819ca90a26c8281bf71" kindref="member">currentMode</ref><sp/>=<sp/><ref refid="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" kindref="member">modes</ref>[newMode];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1ac85d39879a6059172ca90e57341e3371" kindref="member">ModeSelector::handleLongPress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>mode<sp/>selection<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref><sp/>=<sp/>!<ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>mode<sp/>selection<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1aca84215ce851c4abdbfbe9340a2b2ffc" kindref="member">clearAndResetLEDs</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a4dc6fb472a2757e88dde6f35137c08e4" kindref="member">isInSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1aa101ddd545060ae8f98e58f986f86637" kindref="member">singlePressHandled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1aca84215ce851c4abdbfbe9340a2b2ffc" kindref="member">clearAndResetLEDs</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1ab23aa7c21c0b0d98871b13b97ab17520" kindref="member">setState</ref>(<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exit<sp/>mode<sp/>selection<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a50329d06bde51f77027d6ce9e2444bc1" kindref="member">ModeSelector::handleModeSelectionPress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1a15ddcd060673c9d39c647fc4f374dcbd" kindref="member">clearLEDs</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>mode<sp/>for<sp/>the<sp/>LEDs<sp/>if<sp/>not<sp/>in<sp/>mode<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1ad5d9dce7bda36149d503cad8c6160fa2" kindref="member">resetInverted</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a4dc6fb472a2757e88dde6f35137c08e4" kindref="member">isInSelection</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a69c5b741591b66abbf46e64aa295a8f8" kindref="member">previousMode</ref><sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>previous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a56ce569a1e97e2a0b382d032fabf8dda" kindref="member">ModeSelector::handleButtonPress</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>encoder<sp/>and<sp/>handle<sp/>button<sp/>presses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" kindref="member">encoder</ref>-&gt;<ref refid="classEncoder_1ac2feca5ed5040737fbc9d6282e9b48f7" kindref="member">readButton</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" kindref="member">encoder</ref>-&gt;<ref refid="classEncoder_1a26b304caeb9cd561f201d101f62a8964" kindref="member">isButtonLongPressed</ref>())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>long<sp/>press</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classModeSelector_1ade89353075816ece4e257ded8e888d88" kindref="member">longPressHandled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ac85d39879a6059172ca90e57341e3371" kindref="member">handleLongPress</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ade89353075816ece4e257ded8e888d88" kindref="member">longPressHandled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" kindref="member">encoder</ref>-&gt;<ref refid="classEncoder_1ac2feca5ed5040737fbc9d6282e9b48f7" kindref="member">readButton</ref>()<sp/>==<sp/><ref refid="classEncoder_1a8d10c6f5e558cd9235db9375bf980ab9a87937597a856f96152bfafd977fd736c" kindref="member">Encoder::PRESSED</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>single<sp/>press</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>now<sp/>do<sp/>nothing....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1ade89353075816ece4e257ded8e888d88" kindref="member">longPressHandled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1aad5e1a078338a35232888ec31d6cc5ee" kindref="member">ModeSelector::handleEncoderRotation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEncoder_1aa7c4648a7ebc9e651c25c2d450a58213" kindref="member">Encoder::Direction</ref><sp/>direction<sp/>=<sp/><ref refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" kindref="member">encoder</ref>-&gt;<ref refid="classEncoder_1aec7e3503764db573a30979e95570f7c5" kindref="member">readEncoder</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="classEncoder_1aa7c4648a7ebc9e651c25c2d450a58213a221066b3a00f02b2eb0880d56aeae3c5" kindref="member">Encoder::CW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a3951bcc3ea04b712d94850920b7b6031" kindref="member">setMode</ref>(<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="classEncoder_1aa7c4648a7ebc9e651c25c2d450a58213a3cb663af1ad33c99b33695e1f9e71dda" kindref="member">Encoder::CCW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a3951bcc3ea04b712d94850920b7b6031" kindref="member">setMode</ref>(<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Light<sp/>up<sp/>the<sp/>LED<sp/>corresponding<sp/>to<sp/>the<sp/>current<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1aca84215ce851c4abdbfbe9340a2b2ffc" kindref="member">clearAndResetLEDs</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>-&gt;<ref refid="classLEDController_1ab23aa7c21c0b0d98871b13b97ab17520" kindref="member">setState</ref>(<ref refid="classModeSelector_1a4df062db5ff1caaae1e2d7fc44915bff" kindref="member">getMode</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a6da6a3354fe3d5afd3f241324359de03" kindref="member">ModeSelector::isInModeSelection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1ab3ca420fe69c659b5f92b6ae799e5c89" kindref="member">inModeSelection</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1addf7f39b68e55c83b693da4911bd5fa6" kindref="member">ModeSelector::setLedController</ref>(<ref refid="classLEDController" kindref="compound">LEDController</ref>&amp;<sp/><ref refid="main_8cpp_1af8afe1fb511986724cafc628d457ee07" kindref="member">ledController</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ledController<sp/>=<sp/>&amp;<ref refid="classModeSelector_1a2f8c7699b4534f802f75ba51393ba4d2" kindref="member">ledController</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a5b291f549e155bc4f47c35746d966221" kindref="member">ModeSelector::setEncoder</ref>(<ref refid="classEncoder" kindref="compound">Encoder</ref>&amp;<sp/><ref refid="main_8cpp_1a133a3017d675be921d0d7586eec7bb7c" kindref="member">encoder</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;encoder<sp/>=<sp/>&amp;<ref refid="classModeSelector_1ab65d65f54eab8ec5335df2206273f0d8" kindref="member">encoder</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1a0232058d131a73a98781552b12a3b696" kindref="member">ModeSelector::setCurrentMode</ref>(<ref refid="classMode" kindref="compound">Mode</ref>*&amp;<sp/><ref refid="main_8cpp_1a7a725ed0b89db4bf8461039a479bc143" kindref="member">currentMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;currentMode<sp/>=<sp/><ref refid="classModeSelector_1adb7ab19bba250819ca90a26c8281bf71" kindref="member">currentMode</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1ab3680d5757a1efade5128dad7c7c0ab6" kindref="member">ModeSelector::addMode</ref>(<ref refid="classMode" kindref="compound">Mode</ref>*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" kindref="member">modes</ref>.push_back(<ref refid="classModeSelector_1aaab9cca1953b1f4797a55ded09638c95" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classModeSelector_1aa34005332133e2b5e10a4b904aa3c23e" kindref="member">totalModes</ref><sp/>=<sp/><ref refid="classModeSelector_1a4d26cfed61b6573ecaae521b85997b8c" kindref="member">modes</ref>.size();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="classMode" kindref="compound">Mode</ref>*<sp/><ref refid="classModeSelector_1a5a599c64ffef54ba1dade4fedff23d7a" kindref="member">ModeSelector::getCurrentMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classModeSelector_1adb7ab19bba250819ca90a26c8281bf71" kindref="member">currentMode</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="classModeSelector_1af0db492b33c751ccaafa23d9b3880fbc" kindref="member">ModeSelector::ModeSelector</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>mode(0),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a7a725ed0b89db4bf8461039a479bc143" kindref="member">currentMode</ref>(nullMode)<sp/><sp/><sp/>{}<sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>mode<sp/>to<sp/>0</highlight></codeline>
    </programlisting>
    <location file="src/ModeSelector.cpp"/>
  </compounddef>
</doxygen>
